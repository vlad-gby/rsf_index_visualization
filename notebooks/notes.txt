
// Data Loading (JavaScript): Write the JavaScript code to fetch the clean rsf_data.json file you created.

// Chart Creation (Plotly.js): Write the Plotly.js code to take that data and create the initial line chart.

// Interactivity (JavaScript): Connect your controls (e.g., dropdowns for selecting countries) to a function that filters your data and tells Plotly to update the chart.

let myChart

async function get_data() {
    const response = await fetch('../data/data.json');
    const data = await response.json();
     

    years = new Set(data.map(record => record.year))
    years = [...years]

    graph_data = data.filter(row => row.country == 'Ukraine')
    graph_data = graph_data.map(row => row.rank)

    const canvas = document.getElementById('chart')
    myChart = new Chart(
        canvas,
        {
            type:'line',
            data: {
            }
        });

    function updateChart(countries, graph_by, years, factors){
        datasets = []
        countries.forEach((country) => {
            datasets.push(data.filter(row => row.country == country).map(row => row[graph_by]))
        });

        years = years.map(year => parseInt(year))
        let yearsUpd = []
        for (let i = years[0]; i <= years[1]; i++){
            if (i == 2011){
                continue
            }
            yearsUpd.push(i)
        }

        factorsData = {}
        countries.map((selected_country) => {
            factorsData[selected_country] = {}
            factors.forEach((factor) => {
                factorsData[selected_country][factor] = (data.filter(row => {
                    (row.country == selected_country) && (yearsUpd.includes(row.year))
                }).map(row => row[factor]))
        });
        })

        console.log(factorsData)

        myChart.update()
    }
    updateChart(['Ukraine', 'Russia'], 'score', ['2005', '2023'], ['political_score', 'economic_score'])


}


get_data()
